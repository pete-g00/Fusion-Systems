# Goes through all subgroups of order $n$ to find a
# fusion system F on the group with id `grpId` that
# satisfies the `checkFn` condition
FindRealizingGroup := function(n, p, grpId, checkFn) 
    local All, Sylows, Possibilities, i, G, class, P, F;

    All := Filtered(AllGroups(n), G -> not IsAbelian(G));
    Sylows := List(All, G -> SylowSubgroup(G, p));

    # TODO: Look at F-conjugacy classes of F_P(G)
    Possibilities := List(Sylows, 
        P -> Filtered(ConjugacyClassesSubgroups(P), 
            A -> Size(Representative(A)) = grpId[1] and IdGroup(Representative(A)) = grpId));

    for i in [1..Length(All)] do 
        G := All[i];
        for class in Possibilities[i] do 
            P := Representative(class);
            F := RealizedFusionSystem(G, P, p);
            if checkFn(F) then 
                return rec(P := P, G := G);
            fi;
        od;
    od;

    return fail;
end;

# C2*C2 = <a, b>
# Fusion System on C2*C2 generated by <a> -> <b>
# First Occurrence: Order 8*3 ((C2 * C2 * C2) sd C3)
CheckC2C2IsoC2 := function(F)
    local P, L, a, b, c, A, B;

    P := UnderlyingGroup(F);
    L := MinimalGeneratingSet(P);

    a := L[1];
    b := L[2];

    A := Group(a);
    B := Group(b);

    # Check that the subgroups A and B lie in 2 different conjugacy classes
    if Size(FClass(F, A)) <> 2 and Size(FClass(F, B)) <> 2 then 
        return false;
    fi;

    # Check that P has automorphism group of size 1
    return Size(AutF(F, P)) = 1;
end;

# C2*C2 = <a, b>
# Fusion System on C2*C2 generated by <a> -> <b> and <a> -> <c>
# First Occurrence: Order 8*7 (C2 * C2 * C2) sd C7
CheckC2C2AllC2Conjugate := function(F)
    local P, L, a, A;

    P := UnderlyingGroup(F);
    L := MinimalGeneratingSet(P);
    
    a := L[1];
    A := Group(a);

    if Size(FClass(F, A)) <> 3 then 
        return false;
    fi;

    # Check that P has automorphism group of size 1
    return Size(AutF(F, P)) = 1;
end;

# C2*C2 = <a, b>
# Fusion System on C2*C2 generated by <a, b> -> <a, b> order 2 and <a> -> <c>
# First Occurrence: Order {8*16 OR 8*24 OR 8*32 OR 8*36} 8*40?
CheckC2C2_No7 := function(F)
    local P, L, a, A;
    
    P := UnderlyingGroup(F);
    L := MinimalGeneratingSet(P);
    
    a := L[1];
    A := Group(a);

    if Size(FClass(F, A)) <> 3 then 
        return false;
    fi;

    # Check that P has automorphism group of size 2
    return Size(AutF(F, P)) = 2;
end;

# Fusion Systems on C_{p^2}:
# There is one group of order 1, p and p^2 so the only thing we can change is the size of the automorphism groups.
# Aut(C_p) is cyclic order p-1, while Aut(C_p^2) is cyclic order p(p-1).
# Thus, these are all the possible fusion systems on Cp2:
# - For d dividing p-1, we can have (|Aut(C_p^2)|, |Aut(C_p)|) = (1, d)
# - For d dividing p-1, we can have (|Aut(C_p^2)|, |Aut(C_p)|) = (p, d) 
# - For e dividing d dividing p-1, we can have (|Aut(C_p^2)|, |Aut(C_p)|) = (p*e, d)
# 
# p=3:
# 
# (1, 2)        3^3*2       C3 * D18
# (3, 2)        3^3*2       C9 sd C6
# 
# p=5:
# 
# (1, 2)        5^3*2       C5 * D50
# (5, 2)        5^3*2       (C25 sd C5) sd C2
# 
# (1, 4)        5^3*4       C5 * (C25 sd C4)
# (5, 4)        5^3*4       (C25 sd C5) * C4
# 
# (10, 4): Check 125*18++ not possible
# 
# p=7:
# 
# (1, 2)        7^3*2       C7 * D98
# (7, 2)        7^3*2       (C49 sd C7) sd C2
# 
# (1, 3)        7^3*3       C7 * (C49 sd C3)
# (7, 3)        7^3*3       (C49 sd C7) sd C3
# 
# (1, 6): Check 7^3*6++ not possible
# (7, 6): TOO BIG?
# 
# (14, 6): TOO BIG?
# (21, 6): TOO BIG?
# 
CheckCp2 := function(p, sizeP2, sizeP) 
    return function(F)
        local P, L, a, A;

        P := UnderlyingGroup(F);
        L := MinimalGeneratingSet(P);

        a := L[1];
        A := Group(a^p);

        return Size(AutF(F, A)) = sizeP and Size(AutF(F, P)) = sizeP2;
    end;
end;

# Fusion System on C4*C2 generated by \phi : <a> -> <ab> 
# First Occurrence: C4*A4
CheckC4C2IsoC4 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroups(P), M -> StructureDescription(M) = "C4");

    return Size(FClass(F, M[1])) = 2 and Size(AutF(F, P)) = 1;
end;

# Fusion system on C4*C2 generated by \phi : <b> -> <a^2b>
# First Occurrence: Order 16*6 ((C4 x C2) : C4) : C3
CheckC4C2IsoC2A := function(F)
    local P, L, C2C2, Ord2;

    P := UnderlyingGroup(F);
    L := Filtered(MaximalSubgroups(P), M -> StructureDescription(M) = "C4");
    C2C2 := Filtered(MaximalSubgroups(P), M -> StructureDescription(M) <> "C4")[1];
    Ord2 := Filtered(AllSubgroups(P), M -> Size(M) = 2 and not (Elements(M)[2] in L[1]));

    return Size(FClass(F, Ord2[1])) = 2 and Size(AutF(F, C2C2)) = 1;
end;

# Fusion system on C4*C2 generated by \phi : <b> -> <a^2>
# First Occurrence: Order 16*6 [Isomorphic as a fus. sys. to version A]
CheckC4C2IsoC2B := function(F)
    local P, L, C2C2, Ord2;

    P := UnderlyingGroup(F);
    L := Filtered(MaximalSubgroups(P), M -> StructureDescription(M) = "C4");
    C2C2 := Filtered(MaximalSubgroups(P), M -> StructureDescription(M) <> "C4")[1];
    Ord2 := Filtered(AllSubgroups(P), M -> Size(M) = 2 and Elements(M)[2] in L[1]);

    return Size(FClass(F, Ord2[1])) = 2 and Size(AutF(F, C2C2)) = 1;
end;

# Fusion System on C2*C2*C2 generated by \phi : <a> -> <b>
# First Occurrence: Order 16*6 C3 sd ((C2 x C2 x C2 x C2) sd C2)
CheckC2C2C2IsoC2 := function(F)
    local P, L, class, a, b, A;

    P := UnderlyingGroup(F);
    L := Filtered(AllSubgroups(P), Q -> Size(Q) = 2 and Size(FClass(F, Q)) = 2);

    if IsEmpty(L) then 
        return false;
    fi;

    return ForAll(MaximalSubgroups(P), Q -> Size(FClass(F, Q)) = 1 and Size(AutF(F, P)) = 1);
end;

# Fusion System on C2*C2*C2 generated by \phi : <a, b> -> <a, c>
# First Occurrence: Order 16*3 (C2*C2*A4)
CheckC2C2C2IsoC2C2 := function(F)
    local P, L;
    P := UnderlyingGroup(F);
    L := Filtered(MaximalSubgroups(P), Q -> Size(FClass(F, Q)) = 2);
    
    return Length(L) = 2 and Size(AutF(F, P)) = 1;
end;

# Fusion System on D8 generated by \phi : <r^2, f> -> <r^2, rf>
# First Occurrence: 16*3 ((C4 x C2) sd C2) sd C3)
CheckD8C2C2Conjugate := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroupClassReps(P), P -> StructureDescription(P) <> "C4");

    return Size(FClass(F, M[1])) = 2 and Size(AutF(F, P)) = 4;
end;

# Fusion System on D8 generated by \phi : <r^2> -> <f>
# First Occurrence: 16*3 (C2 x S4)
CheckD8C2In3 := function(F)
    local P, Elms, A, B, C, G;

    P := UnderlyingGroup(F);
    Elms := Filtered(ConjugacyClasses(P), class -> Order(Representative(class)) = 2 and Size(class) <> 1);
    
    A := Group(Representative(Elms[1]));
    B := Group(Representative(Elms[2]));
    C := Center(P);

    if Size(FClass(F, A)) = 3 then
        G := Group(Flat([ GeneratorsOfGroup(A), GeneratorsOfGroup(C) ]));
        return Size(AutF(F, G)) = 6;
    elif Size(FClass(F, B)) = 3 then
        G := Group(Flat([ GeneratorsOfGroup(B), GeneratorsOfGroup(C) ]));
        return Size(AutF(F, G)) = 6;
    fi;

    return false;
end;

# Fusion System on D8 generated by \phi : <f> -> <rf>
# First Occurrence: 96 ((C4*C4) sd C2) sd C3
CheckD8C2In4 := function(F)
    local P, Elms, A;

    P := UnderlyingGroup(F);
    Elms := Filtered(ConjugacyClasses(P), class -> Order(Representative(class)) = 2 and Size(class) <> 1);
    A := Group(Representative(Elms[1]));

    return Size(FClass(F, A)) = 4 and Size(AutF(F, P)) = 4;
end;

# Fusion System on D8 generated by \phi : <r^2, f> -> <r^2, f> order 3
# First Occurrence: 16*3 = C2*S4
CheckD8AutC2C2_3 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroupClassReps(P), P -> StructureDescription(P) <> "C4");
    
    return (Size(AutF(F, M[1])) = 6 or Size(AutF(F, M[2])) = 6) and Size(AutF(F, P)) = 4;
end;

# First Occurrence: Order 16*2 (C8 * C2 sd C2)
# Fusion System on C8 generated by a^2 -> a^6
CheckC8_No5 := function(F)
    local P, L, a, A;
    
    P := UnderlyingGroup(F);
    L := MinimalGeneratingSet(P);

    a := L[1];
    A := Group(a^2);
    
    return Size(AutF(F, A)) = 2 and Size(AutF(F, P)) = 1;
end;

# Not tried: 16*8, 16*12, 16*16, 16*20++
# Fusion System on C8 generated by a^2 -> a^6 and a -> a order 2 that fixes a^2
CheckC8_No6 := function(F)
    local P, L, a, A;
    
    P := UnderlyingGroup(F);
    L := MinimalGeneratingSet(P);

    a := L[1];
    A := Group(a^2);
    
    if not (Size(AutF(F, A)) = 2 and Size(AutF(F, P)) = 2) then 
        return false;
    fi;

    # Has to be identity on a^2
    return ForAll(AutF(F, P), phi -> phi(a^3) = a^3);
end;

# C4 x C2 = <a, b>
# Fusion System on C4*C2 generated by a^2 -> a^6
# First Occurrence: 16*2 (C4 x C2 x C2) sd C2
CheckC4C2AutC4 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroups(P), Q -> StructureDescription(Q) = "C4");

    return (Size(AutF(F, M[1])) = 2 or Size(AutF(F, M[2])) = 2) and Size(AutF(F, P)) = 1;
end;

# C4 x C2 = <a, b>
# Fusion System on C4*C2 generated by <a^2, b> -> <a^2, b> order 2
# First Occurrence: 16*2 (C4 x C4) sd C2
CheckC4C2AutC2C2_2 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroups(P), Q -> StructureDescription(Q) <> "C4");

    return Size(AutF(F, M[1])) = 2 and Size(AutF(F, P)) = 1;
end;

# C4 x C2 = <a, b>
# Fusion System on C4*C2 generated by <a^2, b> -> <a^2, b> order 2
# First Occurrence: 16*3 (C4 x C4) sd C3
CheckC4C2AutC2C2_3 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroups(P), Q -> StructureDescription(Q) <> "C4");

    return Size(AutF(F, M[1])) = 3 and Size(AutF(F, P)) = 1;
end;

# C2 x C2 x C2 = <a, b, c>
# Fusion System on C2*C2*C2 generated by <a, b> -> <a, b> order 2
# First Occurrence: 16*2 (C2 x C2 x C2 x C2) : C2
CheckC2C2C2AutC2C2_2 := function(F)
    local P;

    P := UnderlyingGroup(F);
    return Size(AutF(F, P)) = 1 and ForAny(MaximalSubgroups(P), Q -> Size(AutF(F, Q)) = 2);
end;

# C2 x C2 x C2 = <a, b, c>
# Fusion System on C2*C2*C2 generated by <a, b> -> <a, b> order 3
# First Occurrence: 16*3 (C2 x C2 x C2 x C2) : C3
CheckC2C2C2AutC2C2_3 := function(F)
    local P;

    P := UnderlyingGroup(F);
    return Size(AutF(F, P)) = 1 and ForAny(MaximalSubgroups(P), Q -> Size(AutF(F, Q)) = 3);
end;

# Q8 = <a, b>
# Fusion System on Q8 generated by <a> -> <b>
# First Occurrence: 16*3 C2 * SL(2, 3)
CheckQ8IsoC4 := function(F)
    local P;

    P := UnderlyingGroup(F);
    return Size(AutF(F, P)) = 4 and ForAny(MaximalSubgroups(P), M -> Size(FClass(F, M)) = 2);
end;

# C3*C3 = <a, b>
# Fusion System on C3*C3 generated by <a, b> -> <a, b>
# First Occurrence: 27*3 = (C3 * C3 * C3) sd C3
CheckC3C3IsoC3 := function(F)
    local P, M;

    P := UnderlyingGroup(F);
    M := Filtered(MaximalSubgroups(P), M -> Size(FClass(F, M)) = 2);

    return Size(AutF(F, P)) = 1 and Length(M) = 2;
end;

# C3*C3 = <a, b>
# Fusion System on C3*C3 generated by <a> -> <a> order 2
# First Occurrence: 27*2 = C3 x ((C3 x C3) : C2)
CheckC3C3AutC3 := function(F)
    local P;

    P := UnderlyingGroup(F);
    return Size(AutF(F, P)) = 1 and ForAny(MaximalSubgroups(P), M -> Size(AutF(F, M)) = 2);
end;

# C9 = <a>
# Fusion System on C9 generated by <a^3> -> <a^3> order 2
# First Occurrence: 27*2 = C3 * (C9 sd C2)
CheckC9AutC3 := function(F)
    local P;

    P := UnderlyingGroup(F);
    return Size(AutF(F, P)) = 1 and ForAny(MaximalSubgroups(P), M -> Size(AutF(F, M)) = 2);
end;

# Improve this by:
# - Defining generated fusion systems
# - Defining isomorphism of fusion systems

# We say that a fusion system F is natural if for any \phi : A \to B in F, 
# and P contains <A, B> with \phi a restriction of psi in Aut(P), psi in Aut_F(P).
