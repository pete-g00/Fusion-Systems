#! @Chapter Constructing a Fusion System
#! 
#! There are 4 ways to define a fusion system $\calF$ on a $p$-group $P$:
#! 
#! * a fusion system $\calF = \calF_P(G)$ realized by an overgroup $G$, `RealizedFusionSystem(G, P, p)`;
#! * a transported fusion system $\calF = \calE^\phi$ given another fusion system $\calE$ and an isomorphism $\phi \colon Q \to P$, `TransportFusionSystem(F, phi)`;
#! * a fusion system generated by a list of injective maps `l`, `GeneratedFusionSystem(P, l)`; and 
#! * the universal fusion system $\calF$, `UniversalFusionSystem(P, p)`.
#! 
#! In this chapter, we describe the implementation for each of these representations.
#! 
#! In the operations chapter, we will see that these 4 representatives have core functionalities implemented differently, and all the other functionalities are commonly built on them. We describe the implementations of some of the core functionalities here.

#! @Section Realized Fusion System
#! 
#! Let $G$ be a finite group and $P$ a $p$-subgroup of $G$. The realized fusion system $\calF_P(G)$ is a fusion system on $P$, where $\Hom_\calF(A, B)$ consists of all those maps $\phi \colon A \to B$ where $\phi$ is induced by some some $g \in G$, i.e. $\phi = c_g$ on $A$.
#! 
#! For a realized fusion system $\calF_P(G)$, the following is the implementation of the core operations:
#! * The operation `AutF(F, A)` is delegated to `Automizer(G, A)`
#! * The operation `RepresentativeFIsomorphism(F, A, B)` finds an $x \in G$ that maps $A$ to $B$ using `RepresentativeAction(G, A, B)`, and returns `ConjugatorIsomorphism(A, g)`.
#! * The operation `FClassReps(F, A)` returns a representative from each $P$-conjugacy class in $Q^G$.
#!
#! In the case when $P$ is a Sylow $p$-subgroup of $G$, we know that $\calF_P(G)$ is a saturated fusion system. This allows us to implement the following operations more efficiently:
#! * `IsFullyNormalized(F, A)`, which checks $N_P(Q)$ is a Sylow $p$-subgroup of $N_G(Q)$;
#! * `IsFullyCentralized(F, A)`, which checks $C_P(Q)$ is a Sylow $p$-subgroup of $C_G(Q)$;
#! * `IsFReceptive(F, A)`, which checks whether $A$ is fully $\calF$-centralized;
#! * `IsSaturated(F)`, which returns `true`.

DeclareRepresentation("IsRealizedFusionSystemRep", 
    IsComponentObjectRep and IsFusionSystem, ["G", "P", "p", "IsSylowSubgroup"]);

#! @Description
#! Given a finite group $G$ and a $p$-subgroup $P$, returns the fusion system $\calF_P(G)$.
#! 
#! @Arguments G P
#! @Returns a fusion system
DeclareOperation("RealizedFusionSystem", [IsGroup, IsGroup]);

#! @Description
#! Given a realized fusion system $\calF_P(G)$ with $G$ a finite group and $P$ a $p$-subgroup of $G$, returns $G$.
#! 
#! @Arguments F
#! @Returns a group
DeclareAttribute("RealizingGroup", IsRealizedFusionSystemRep);

#! @Section Transport Fusion System
#! Let $\calF$ be a fusion system on a finite $p$-group $P$, and let $\phi \colon P \to Q$ be an isomorphism. The transport fusion system $\calE = \calF^\phi$ is a fusion system on $Q$ where a map $\psi \in \Hom_\calF(A, B)$ if and only if $\psi^\phi \in \Hom_\calE(A^\phi, B^\phi)$.
#!
#! The core operations for a transport fusion system $\calE = \calF^\phi$ are delegated to the inducing fusion system $\calF$. For example, `AutF(E, A)` computes `AutF(F, B)`, where $B = A^{\phi^{-1}}$ and conjugates the resulting group by $\phi$. Note that only the core operations are overriden, not all of them.

DeclareRepresentation("IsTransportFusionSystemRep", 
    IsComponentObjectRep and IsFusionSystem, ["fusion", "group", "phi", "phiInv"]);

#! @Description
#! 
#! Given a fusion system $\calF$ on a finite $p$-group $P$, and a group isomorphism $\phi \colon P \to Q$, returns the fusion system $\calF^\phi$.
#! 
#! @Arguments F phi
#! @Returns a fusion system
DeclareOperation("\^", [IsFusionSystem, IsGroupHomomorphism]);

#! @Section Universal Fusion System
#! 
#! Let $P$ be a finite $p$-group. The universal fusion system $\calU(P)$ is a fusion system on $P$, where for any $A, B \leq P$ and an injective homomorphism $\phi \colon A \to B$, the map $\phi$ lies in $\Hom_{\calU(P)}(A, B)$.
#! 
#! For a universal fusion system $\calU(P)$, we partition the $P$-conjugacy class of subgroups into isomorphism types. We use this to implement the core operations:
#! * The operation `AutF(F, A)` returns `AutomorphismGroup(A)`;
#! * The operation `RepresentativeFIsomorphism(F, A, B)` returns `IsomorphismGroups(A, B)`; and
#! * The operation `FClassReps(F, A)` takes a representative from each $P$-conjugacy class of $B$, where $B$ and $A$ are isomorphic.

DeclareRepresentation("IsUniversalFusionSystemRep", 
    IsComponentObjectRep and IsFusionSystem, ["P", "Subs", "p"]);

#! @Description
#! Given a finite $p$-group $P$, constructs the universal fusion system on $P$.
#! @Arguments P
#! @Returns a fusion system
DeclareOperation("UniversalFusionSystem", [IsGroup]);

#! @Section Generated Fusion System
#! 
#! Let $P$ be a finite $p$-group and $L$ a list of injective homomorphisms between subgroups of $P$. The fusion system $\calF$ generated by $L$ is the smallest fusion system containing all the maps in $L$.
#! 
#! There are 2 types of generated fusion systems- one that generates from the inner fusion system (i.e. purely based on the maps), and one that generates from a different fusion system $\calE$ on $P$. The resulting fusion system, in that case, is the smallest fusion system containing all the maps in $L$ and $\calE$. 
#! 
#! We construct a generated fusion system $\calF$ from a fusion system $\calE$ and maps $L$ by first identifying the $\calF$-conjugacy class. To do so, we first construct an implicit graph on each isomorphism type of subgroups of $P$ (up to conjugacy class). We then add an (undirected) edge in each graph if any of the maps in $L$ connect the two vertices. Using this data, we perform a depth-first search to establish representatives from each $\calF$-conjugacy class, along with representatives for each $\calF$-conjugacy class. We also keep track of the representative isomorphisms, which map any of the $P$-conjugacy class representatives to an $\calF$-conjugacy class representative.
#! 
#! After establishing the $\calF$-conjugacy class, we aim to establish the automorphism groups for each representative. Since we have established the $\calF$-conjugacy class, every map induces an automorphism on the $\calF$-representatives. For every representative $A$ of a $\calF$-conjugacy class, we loop through all the maps in $L$ to find all the $\calF$-conjugates contained in $A$. 

DeclareRepresentation("IsGeneratedFusionSystemRep", 
    IsComponentObjectRep and IsFusionSystem, ["F", "Reps", "Isoms", "ClassReps", "NewFAuts"]);

#! @BeginGroup
#! @Description
#! Let $P$ be a finite $p$-group, and $L$ a list of injective group homomorphisms between subgroups of $P$.
#! 
#! If $\calF$ is a fusion system on $P$, the operation `GeneratedFusionSystem(F, L)` constructs the fusion system $\calE$ on $P$ generated by all maps in $F$ and $L$.
#!
#! The operation `GeneratedFusionSystem(P, L)` constructs the fusion system generated by the maps in $L$.
#! 
#! @Arguments F L
#! @Returns a fusion system
DeclareOperation("GeneratedFusionSystem", [IsFusionSystem, IsListOrCollection]);
#! @Arguments P L
#! @Returns a fusion system
DeclareOperation("GeneratedFusionSystem", [IsGroup, IsListOrCollection]);
#! @EndGroup